/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* tail = head;
        //ListNode* pretail = head;
        if(!head or !head->next)
            return head;
        int lenght = 0;
        while(tail->next->next != NULL)
        {
            tail = tail->next;
            lenght++;
        }
        lenght+=2;
        if(k > lenght)
            k%= lenght;
        cout << lenght;
        if(k == 0)
            return head;
        ListNode *p = new ListNode(tail->next->val);
        p->next = head;
        head = p;
        tail->next = NULL;
        return rotateRight(head, k-1);
    }
};