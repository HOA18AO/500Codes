/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    // the vector is sorted
    TreeNode* sortedArrayToBST(vector<int>& nums)
    {
        TreeNode* p;
        p = Create(nums,0,nums.size()-1);
        return p;
    }
    TreeNode* Create(vector<int>& nums, int head, int tail)
    {
        if(head>tail)
            return NULL;
        else
        {
            int mid = (head+tail)/2;
            TreeNode* p;
            p = new TreeNode(nums[mid]);
            p->left = Create(nums, head, mid-1);
            p->right = Create(nums, mid+1, tail);
            return p;
        }
    }
};