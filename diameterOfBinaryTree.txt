/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int lenght(TreeNode *root)
    {
        if(root!=NULL)
        {
            int a = lenght(root->left);
	        int b = lenght(root->right);
	        return max(a,b) + 1;
        }
        else
            return 0;
    }
    int diameterOfBinaryTree(TreeNode* root) {
        if(root == NULL)
            return 0;
        else
        {
            int a = diameterOfBinaryTree(root->right); // diameter
            int b = diameterOfBinaryTree(root->left); // diameter
            int diameter = lenght(root->left) + lenght(root->right);
            diameter = max(diameter, max(a,b));
            return diameter;
        }
    }
};