/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> x;
    int max(int a, int b)
    {
        return (a>b) ? a : b;
    }
    int heigh(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        else
        {
            return 1 + max(heigh(root->left), heigh(root->right));
        }
    }
    void insertAns( TreeNode* root, int level)
    {
        if(root != NULL)
        {
            if(level == 1)
                x.push_back(root->val);
            else
            {
                insertAns(root->left, level-1);
                insertAns(root->right,level-1);
            }
        }
    }
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans; // this is what you gonna return
        int h = heigh(root);
        for(int i=1 ; i<=h ; i++)
        {
            x.clear();
            insertAns(root,i);
            ans.push_back(x);
        }
        return ans;
    }
};